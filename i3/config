# iconic font icon search: https://fontawesome.com/v4.7/cheatsheet/

set $mod Mod1

bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart

workspace_layout default
gaps inner 0
gaps outer 0

#border indicator on windows:
new_window pixel 1

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# switch to workspace
bindsym $mod+1    workspace  $ws1
bindsym $mod+2    workspace  $ws2
bindsym $mod+3    workspace  $ws3
bindsym $mod+4    workspace  $ws4
bindsym $mod+5    workspace  $ws5
bindsym $mod+6    workspace  $ws6
bindsym $mod+7    workspace  $ws7
bindsym $mod+8    workspace  $ws8
bindsym $mod+9    workspace  $ws9
bindsym $mod+0    workspace  $ws10

# switch to workspace with numpad keys
bindcode $mod+87 workspace 1
bindcode $mod+88 workspace 2
bindcode $mod+89 workspace 3
bindcode $mod+83 workspace 4
bindcode $mod+84 workspace 5
bindcode $mod+85 workspace 6
bindcode $mod+79 workspace 7
bindcode $mod+80 workspace 8
bindcode $mod+81 workspace 9
bindcode $mod+90 workspace 10

# switch to workspace with numlock numpad keys
bindcode $mod+Mod2+87 workspace $ws1
bindcode $mod+Mod2+88 workspace $ws2
bindcode $mod+Mod2+89 workspace $ws3
bindcode $mod+Mod2+83 workspace $ws4
bindcode $mod+Mod2+84 workspace $ws5
bindcode $mod+Mod2+85 workspace $ws6
bindcode $mod+Mod2+79 workspace $ws7
bindcode $mod+Mod2+80 workspace $ws8
bindcode $mod+Mod2+81 workspace $ws9
bindcode $mod+Mod2+90 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace  $ws1
bindsym $mod+Shift+2    move container to workspace  $ws2
bindsym $mod+Shift+3    move container to workspace  $ws3
bindsym $mod+Shift+4    move container to workspace  $ws4
bindsym $mod+Shift+5    move container to workspace  $ws5
bindsym $mod+Shift+6    move container to workspace  $ws6
bindsym $mod+Shift+7    move container to workspace  $ws7
bindsym $mod+Shift+8    move container to workspace  $ws8
bindsym $mod+Shift+9    move container to workspace  $ws9
bindsym $mod+Shift+0    move container to workspace  $ws10

# move focused container to workspace with numpad keys
bindcode $mod+Shift+Mod2+87 	move container to workspace  $ws1
bindcode $mod+Shift+Mod2+88 	move container to workspace  $ws2
bindcode $mod+Shift+Mod2+89 	move container to workspace  $ws3
bindcode $mod+Shift+Mod2+83 	move container to workspace  $ws4
bindcode $mod+Shift+Mod2+84 	move container to workspace  $ws5
bindcode $mod+Shift+Mod2+85 	move container to workspace  $ws6
bindcode $mod+Shift+Mod2+79 	move container to workspace  $ws7
bindcode $mod+Shift+Mod2+80 	move container to workspace  $ws8
bindcode $mod+Shift+Mod2+81 	move container to workspace  $ws9
bindcode $mod+Shift+Mod2+90 	move container to workspace  $ws10

# move focused container to workspace with numpad keys
bindcode $mod+Shift+87 	 move container to workspace  $ws1
bindcode $mod+Shift+88 	 move container to workspace  $ws2
bindcode $mod+Shift+89 	 move container to workspace  $ws3
bindcode $mod+Shift+83 	 move container to workspace  $ws4
bindcode $mod+Shift+84 	 move container to workspace  $ws5
bindcode $mod+Shift+85 	 move container to workspace  $ws6
bindcode $mod+Shift+79 	 move container to workspace  $ws7
bindcode $mod+Shift+80 	 move container to workspace  $ws8
bindcode $mod+Shift+81 	 move container to workspace  $ws9
bindcode $mod+Shift+90 	 move container to workspace  $ws10

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+q kill

# exit-menu
bindsym $mod+Shift+e exec ~/.config/i3/scripts/powermenu

# Lock the system
# lock with a picture:
#bindsym $mod+l exec i3lock -i  ~/.config/i3/i3-lock-screen.png -p default|win -t

# keybinding in fancy rofi (automated):
bindsym F1 exec ~/.config/i3/scripts/keyhint-2
# alternative
# keybinding list in editor:
# bindsym $mod+F1 exec xed ~/.config/i3/keybindings

# Backlight control
bindsym XF86MonBrightnessUp exec xbacklight +5 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"
bindsym XF86MonBrightnessDown exec xbacklight -5 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"

# toggle tiling / floating
bindsym $mod+Shift+d floating toggle

# change focus between tiling / floating windows
bindsym $mod+d focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# open new empty workspace
bindsym $mod+Shift+n exec ~/.config/i3/scripts/empty_workspace

# Multimedia Keys

# volume
bindsym XF86AudioRaiseVolume exec amixer -D pulse sset Master 2%+ && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec amixer -D pulse sset Master 2%- && pkill -RTMIN+1 i3blocks

# gradular volume control
bindsym $mod+XF86AudioRaiseVolume exec amixer -D pulse sset Master 1%+ && pkill -RTMIN+1 i3blocks
bindsym $mod+XF86AudioLowerVolume exec amixer -D pulse sset Master 1%- && pkill -RTMIN+1 i3blocks

# audio control
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioMute exec amixer sset Master toggle && killall -USR1 i3blocks

## App shortcuts
bindsym Print exec scrot ~/%Y-%m-%d-%T-screenshot.png && notify-send "Screenshot saved to ~/$(date +"%Y-%m-%d-%T")-screenshot.png"

# Power Profiles menu switcher (rofi)
bindsym $mod+Shift+p exec ~/.config/i3/scripts/power-profiles

##########################################
# configuration for workspace behaviour: #
##########################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# use workspaces on different displays:
# where you have to replace VGA-0/HDMI-0 with the names for your displays
# you can get from xrandr command
#workspace $ws1 output VGA-0
#workspace $ws2 output VGA-0
#workspace $ws3 output HDMI-0
#workspace $ws4 output HDMI-0
#workspace $ws5 output HDMI-0

# bind program to workspace and focus to them on startup:
# assign [class="Xfce4-terminal"] $ws1
# assign [class="(?i)firefox"] $ws2
# assign [class="Thunar"] $ws3
# assign [class="Thunderbird"] $ws4
# assign [class="TelegramDesktop"] $ws5

# automatic set focus new window if it opens on another workspace then the current:
# for_window [class=Xfce4-terminal] focus
# for_window [class=(?i)firefox] focus
# for_window [class=Thunar] focus
# for_window [class=Thunderbird] focus
# for_window [class=TelegramDesktop] focus

##############
# compositor #
##############

# transparency
# uncomment one of them to be used (picom package is installed per default)
# options could need changes, related to used GPU and drivers.
# to find the right setting consult the archwiki or ask at the forum.
#
# xcompmgr: https://wiki.archlinux.org/title/Xcompmgr
# manpage: https://man.archlinux.org/man/xcompmgr.1.en
#exec --no-startup-id xcompmgr -C -n &
# or an more specialized config like this:
#exec --no-startup-id xcompmgr -c -C -t-5 -l-5 -r4.2 -o.55 &
#
# or:
#
# picom: https://wiki.archlinux.org/title/Picom
# manpage: https://man.archlinux.org/man/picom.1.en
# The default configuration is available in /etc/xdg/picom.conf 
# For modifications, it can be copied to ~/.config/picom/picom.conf or ~/.config/picom.conf
#
# using default config 
#exec_always --no-startup-id picom -b
#
# for custom config:
#exec_always --no-startup-id picom --config  ~/.config/picom.conf

#############################################
# autostart applications/services on login: #
#############################################

#get auth work with polkit-gnome
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# dex execute .desktop files + apps using /etc/xdg/autostart.
# when second to i3 a DE is installed or mixed usage of i3 + xfce4 or GNOME
# in this cases better disable dex and use manual starting apps using xdg/autostart
# if enabled you should comment welcome app.
# https://github.com/jceb/dex
#exec --no-startup-id dex -a -s /etc/xdg/autostart/:~/.config/autostart/
exec --no-startup-id dex --autostart --environment i3

# start conky:
#exec_always --no-startup-id conky

# start a script to setup displays
# uncomment the next line, use arandr to setup displays and save the file as monitor:
exec --no-startup-id ~/.screenlayout/monitor.sh

# set wallpaper
exec --no-startup-id sleep 2 && nitrogen --restore
#exec --no-startup-id feh --bg-fill /usr/share/endeavouros/backgrounds/endeavouros_i3.png

# set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600

# disable power saving (for example if using xscreensaver)
#exec --no-startup-id xset -dpms

# use xautolock to use autosuspend rules for mobile devices
# https://wiki.archlinux.org/title/Session_lock#xautolock
#exec --no-startup-id xautolock -time 60 -locker "systemctl suspend"


# xscreensaver
# https://www.jwz.org/xscreensaver
#exec --no-startup-id xscreensaver --no-splash

# Desktop notifications
exec --no-startup-id dbus-launch dunst --config ~/.config/dunst/dunstrc
# alternative if you installed aside with XFCE4:
# exec --no-startup-id /usr/lib/xfce4/notifyd/xfce4-notifyd &

# autotiling script
# https://github.com/nwg-piotr/autotiling
# `yay -S autotiling ;) (it is in AUR)
#exec_always --no-startup-id autotiling

# Autostart apps as you like
#exec --no-startup-id sleep 2 && xfce4-terminal
#exec --no-startup-id sleep 3 && thunar

exec --no-startup-id unclutter

###############
# system tray #
###############
# if you do not use dex: exec --no-startup-id dex --autostart --environment i3
# you need to have tray apps started manually one by one:

# start blueberry app for managing bluetooth devices from tray:
#exec --no-startup-id blueberry-tray

# networkmanager-applet
#exec --no-startup-id nm-applet

# clipman-applet
#exec --no-startup-id xfce4-clipman

##################
# floating rules #
##################

# set floating (nontiling) for apps needing it
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable

# set floating (nontiling) for special apps
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [window_role="About"] floating enable

# set border of floating window
for_window [class="urxvt"] border pixel 1

# set size of floating window
#for_window [window_role="(?i)GtkFileChooserDialog"] resize set 640 480 #to set size of file choose dialog
#for_window [class=".*"] resize set 640 480 #to change size of all floating windows 

# set position of floating window
#for_window [class=".*"] move position center

######################################
# color settings for bar and windows #
######################################

# # define colors for windows:
# #class                      border		bground     text        indicator       child_border
# client.focused		    	$lightblue	$darkblue	$white		$mediumgrey	    $mediumgrey
# client.unfocused	    	$darkblue	$darkblue	$grey		$darkgrey	    $darkgrey
# client.focused_inactive		$darkblue	$darkblue	$grey		$black		    $black
# client.urgent		    	$urgentred	$urgentred	$white		$yellowbrown	$yellowbrown

############################################
# bar settings (input comes from i3blocks) #
############################################

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
bar {
	font pango: Fira Sans 10
	status_command i3blocks -c ~/.config/i3/i3blocks.conf
	position top
#	    	i3bar_command i3bar --transparency
# it could be that you have no primary display set: set one (xrandr --output <output> --primary)
# reference: https://i3wm.org/docs/userguide.html#_tray_output
	tray_output primary
	tray_padding 0

# When strip_workspace_numbers is set to yes,
# any workspace that has a name of the form
# “[n][:][NAME]” will display only the name.
    strip_workspace_numbers yes
##strip_workspace_name no

	colors {
		separator          $purple
		background         $darkgrey
		statusline         $white
#                          		border 		        bg		txt		indicator
		focused_workspace	$mediumgrey	   	$grey		$darkgrey	$purple
		active_workspace	$lightblue      	$mediumgrey	$darkgrey	$purple
		inactive_workspace	$darkgrey   		$darkgrey	$grey		$purple
		urgent_workspace	$urgentred	    	$urgentred	$white		$purple
	}
}

# you can add different bars for multidisplay setups on each display:
# set output HDMI-0 to the display you want the bar, --transparency can be set.
# Transparency needs rgba color codes to be used where the last two letters are the transparency factor see here:
# https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4
# #08052be6 --> e6=90%

# bar {
#	font pango: Noto Sans Regular 10
#	status_command i3blocks -c ~/.config/i3/i3blocks-2.conf
#	i3bar_command i3bar --transparency
#	output HDMI-0
#	position bottom
#
# When strip_workspace_numbers is set to yes,
# any workspace that has a name of the form
# “[n][:][NAME]” will display only the name.
#strip_workspace_numbers yes
##strip_workspace_name no
#
#	colors {
#		separator          $purple
#		background         $darkbluetrans
#        	statusline         $white
#					border		bg		txt		indicator
#		focused_workspace	$lighterblue	$lighterblue	$darkblue	$purple
#		active_workspace	$lightdblue	$lightdblue	$darkblue	$purple
#		inactive_workspace	$darkblue	$darkblue	$lightdblue	$purple
#		urgent_workspace	$urgentred	$urgentred	$white		$purple
#	}
#}

#####################################
# Application menu handled by rofi: #
#####################################

## rofi bindings fancy application menu ($mod+d /F9 optional disabled)

bindsym $mod+space exec rofi -modi drun -show drun \
		-config ~/.config/rofi/rofidmenu.rasi

#bindsym F9 exec rofi -modi drun -show drun \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings for window menu ($mod+t /F10 optional disabled)

bindsym $mod+t exec rofi -show window \
		-config ~/.config/rofi/rofidmenu.rasi

#bindsym F10 exec rofi -show window \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings to manage clipboard (install rofi-greenclip from the AUR)

#exec --no-startup-id greenclip daemon>/dev/null
#bindsym $mod+c exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard \
#		-config ~/.config/rofi/rofidmenu.rasi



################### USER CONFIG


# COLORSCHEME (gruvbox)

set $bg0 #282828
set $bg2 #504945
set $fg #ebdbb2
set $darkred #cc241d
set $red #fb4934
set $darkgreen #98971a
set $green #b8bb26
set $darkyellow #d79921
set $yellow #fabd2f
set $darkblue #458588
set $blue #83a598
set $darkmagenta #b16286
set $magenta #d3869b
set $darkcyan #689d68
set $cyan #8ec07c
set $white #a89984
set $gray #1d2021

# bar {
#  position $i3-wm.bar.position
#  mode $i3-wm.bar.mode
#  font pango:$i3-wm.bar.font
#  separator_symbol $i3-wm.bar.separatorchar
#  status_command $i3-wm.bar.status_command
#  tray_output $i3-wm.bar.trayoutput
#  strip_workspace_numbers $i3-wm.bar.stripworkspacenumbers
#
#  colors {
#      background $i3-wm.bar.background.color
#      statusline $i3-wm.bar.statusline.color
#      separator  $i3-wm.bar.separator.color
#
##                        BORDER  BACKGROUND TEXT
#      focused_workspace  $i3-wm.bar.workspace.focused.border.color      $i3-wm.bar.workspace.focused.background.color   $i3-wm.bar.workspace.focused.text.color
#      active_workspace   $i3-wm.bar.workspace.active.border.color       $i3-wm.bar.workspace.active.background.color    $i3-wm.bar.workspace.active.text.color
#      inactive_workspace $i3-wm.bar.workspace.inactive.border.color     $i3-wm.bar.workspace.inactive.background.color  $i3-wm.bar.workspace.inactive.text.color
#      urgent_workspace   $i3-wm.bar.workspace.urgent.border.color       $i3-wm.bar.workspace.urgent.background.color    $i3-wm.bar.workspace.urgent.text.color
#  }
# }

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:Ubuntu 10
font pango:Iosevka 10

set $left h
set $down j
set $up k
set $right l

# Change focus.
bindsym Mod1+$left focus left
bindsym Mod1+$down focus down
bindsym Mod1+$up focus up
bindsym Mod1+$right focus right

# Move focused window.
bindsym Mod1+Shift+$left move left
bindsym Mod1+Shift+$down move down
bindsym Mod1+Shift+$up move up
bindsym Mod1+Shift+$right move right

bindsym Mod1+n workspace next
bindsym Mod1+p workspace prev

# Use Mouse+Mod1 to drag floating windows to their wanted position.
floating_modifier Mod1

bindsym Mod1+Escape exec i3lock -c 282828 --nofork
bindsym Mod1+Shift+Escape exec i3lock -c 282828 --nofork

# Kill focused window.
bindsym Mod1+Shift+q kill

# Start dmenu (a program launcher).
#bindsym Mod1+d exec --no-startup-id dmenu_run -i -fn "Fira Mono Nerd Font:size=14" -nb "$bg0" -sf "$fg" -sb "$darkblue" -nf "$fg"
# Start i3-dmenu-desktop.
#bindsym Mod1+d exec --no-startup-id i3-dmenu-desktop

# Split in horizontal orientation.
bindsym Mod1+c split h
# Split in vertical orientation.
bindsym Mod1+v split v

# enter fullscreen mode for the focused container
bindsym Mod1+f fullscreen toggle

# Change container layout (stacked, tabbed, toggle split).
bindsym Mod1+s layout stacking
bindsym Mod1+w layout tabbed
bindsym Mod1+e layout toggle split

# change focus between tiling / floating windows
bindsym Mod1+minus focus mode_toggle

# focus the child container
#bindsym Mod1+d focus child

# move the currently focused window to the scratchpad
#bindsym $mod+Shift+s move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
#bindsym $mod+s scratchpad show

#bindsym Mod1+i exec --no-startup-id polybar-msg cmd toggle

#set $exitmenu "exit: [c]ancel loc[k] [l]ogout [r]eboot [s]hutdown sus[p]end"
#bindsym Mod1+Shift+e mode $exitmenu
#mode $exitmenu {
#    bindsym c mode "default"
#    bindsym Escape mode "default"
#    bindsym k exec lock --blur=0x5
#    bindsym l exec i3-msg exit
#    bindsym r exec systemctl reboot
#    bindsym s exec systemctl shutdown
#    bindsym p exec i3lock -c 282828; systemctl suspend
#}


# resize window (you can also use the mouse for that)
set $resize "resize: $left $down $up $right, return to exit"
bindsym Mod1+r mode $resize
mode $resize {
    bindsym $left       resize shrink width 5 px or 5 ppt
    bindsym $down       resize grow height 5 px or 5 ppt
    bindsym $up         resize shrink height 5 px or 5 ppt
    bindsym $right      resize grow width 5 px or 5 ppt

# back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#
#exec -c "HUD"
#for_window [instance="HUD"] floating enable, resize set 1200px 800px, move scratchpad

mouse_warping none

# Change brightness setting.
#bindsym XF86MonBrightnessUp exec --no-startup-id brt +5
#bindsym XF86MonBrightnessDown exec --no-startup-id brt -5

# bindsym XF86AudioMute exec --no-startup-id vol toggle

#bindsym Print exec "scrot ~/Downloads/Screenshot_%Y-%m-%d%H%M%S.png"

for_window [class="^.*"] border pixel 2
hide_edge_borders smart

# Define colors variables:
set $darkblue    #08052b
set $lightblue   #5294e2
set $urgentred   #e53935
set $white       #ffffff
set $black       #000000
set $purple      #e345ff
set $darkgrey    #383c4a
set $grey        #b0b5bd
set $mediumgrey  #8b8b8b
set $yellowbrown #e1b700

set $bg0 #282828
set $bg2 #504945
set $fg #ebdbb2
set $darkred #cc241d
set $red #fb4934
set $darkgreen #98971a
set $green #b8bb26
set $darkyellow #d79921
set $yellow #fabd2f
set $darkblue #458588
set $blue #83a598
set $darkmagenta #b16286
set $magenta #d3869b
set $darkcyan #689d68
set $cyan #8ec07c
set $white #a89984
set $gray #1d2021

#set_from_resource $lightblue color14 #000000
#set_from_resource $darkblue color6 #000000
#set_from_resource $fg color7 #000000
#set_from_resource $bg2 color10 #000000
#set_from_resource $white color0 #000000

#                       border    background text      indicator  child_border
client.focused          $darkblue $darkblue  $fg       $magenta   $darkblue
#client.focused_inactive $white    $white     $fg       $magenta   $gray
client.focused_inactive $darkblue $darkblue  $fg       $magenta   $gray
client.unfocused        $bg2      $bg2       $fg       $magenta   $gray
client.urgent           $darkred  $darkred   $fg       $darkred   $darkred

# exec_always --no-startup-id xautolock -time 15 -locker "slock"
exec_always --no-startup-id xss-lock --transfer-sleep-lock -- i3lock -c 282828 --nofork
exec_always --no-startup-id ~/.fehbg

exec --no-startup-id setxkbmap -layout us -option ctrl:nocaps
exec --no-startup-id xset r rate 180 40
exec --no-startup-id ~/.fehbg &
exec --no-startup-id killall polybar; polybar -c ~/.config/polybar/config i3 &

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#    mode hide
#    #volume master {
#    #    format = "𝅘𝅥𝅮: %volume"
#    #}
#    status_command i3status
#    tray_output primary
#    colors {
#        # bar background color
#        background $bg0
#        # text color used for blocks that do not have a color specified.
#        statusline $fg
#        # workspaces section
#        focused_workspace    $darkcyan $darkcyan $gray
#        inactive_workspace   $gray     $gray     $white
#        active_workspace     $gray     $gray     $white
#        urgent_workspace     $red      $red      $bg0
#    }
#}

# pulseaudio-utils settings
#
# Symbolic name for sink (numeric index not supported)
#   Recommended: comment out this setting and omit the -s option to use default sink
#   List sink names: pacmd list-sinks | awk -F "[<>]" '/^\s+name: <.*>/{print $2}'
#set $sinkname alsa_output.pci-0000_00_1b.0.analog-stereo

## Volume control

# Command for the status line
#   ie: i3blocks, i3status
set $statuscmd i3status

# Signal used to update the status line
#   i3blocks uses SIGRTMIN+10 by default
#   i3status uses SIGUSR1 by default
set $statussig SIGUSR1

# Amount to increase/decrease volume as a percentage
set $volumestep 2

# Path to volume control, without trailing slash
set $volumepath ~/git/i3-volume

# bindsym XF86AudioRaiseVolume exec --no-startup-id pulsemixer --change-volume +2
# bindsym XF86AudioLowerVolume exec --no-startup-id pulsemixer --change-volume -2
# Using pulseaudio-utils (append "-s $sinkname" without quotes to override default sink)
#bindsym XF86AudioRaiseVolume exec --no-startup-id $volumepath/volume -t $statuscmd -u $statussig up $volumestep
#bindsym XF86AudioLowerVolume exec --no-startup-id $volumepath/volume -t $statuscmd -u $statussig down $volumestep
#bindsym XF86AudioMute        exec --no-startup-id $volumepath/volume -t $statuscmd -u $statussig mute
